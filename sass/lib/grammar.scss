/// returns a grammar map given a descriptor
/// @param    {Map|List|String} $descriptor - the descriptor to convert
/// @returns  {Map} the grammar map
@function -restyle--grammar($descriptor) {
  $debug-message: "took {time} to parse the grammar for `#{inspect($descriptor)}`";

  $start-time: -restyle--timer-js();

  $descriptor: if(type-of($descriptor) == map, $descriptor, (
    description: $descriptor
  ));

  $result: -restyle--grammar-from-description-js(
    map-get($descriptor, description),
    map-get($descriptor, type),
    $-restyle--registered-types,
    $-restyle--registered-aliases,
    $-restyle--grammar-context-stack
  );

  $tmp: -restyle--log($debug-message, "time:grammar", (
    time: -restyle--timer-js($start-time)
  ));

  @return $result;
}

/// returns a collection of grammar maps for a given collection of descriptors
/// @param    {Map|List|String} $descriptors... - the descriptors to convert
/// @returns  {List<Map>} the collection of grammar maps
@function -restyle--grammars($descriptors...) {
  $grammars: ();
  @each $descriptor in $descriptors {
    $grammar: -restyle--grammar($descriptor);
    @if ($grammar) {
      $grammars: append($grammars, $grammar);
    }
  }
  @return $grammars;
}
