@import "restyle";

$data-this: ();
$data-var: ();
$data-static: ();

$limit: 100;
@for $i from 0 to $limit {
  $data-this: map-merge($data-this, (
    // create a reference to the next property (this is a worst-case scenario)
    foo#{$i}: if($i == ($limit - 1), bar, this(foo#{$i + 1}))
  ));
  $data-static: map-merge($data-static, (
    foo#{$i}: bar
  ));
}

@for $i from 0 to ($limit / 2) {
  $data-var: map-merge($data-var, (
    restyle-var(foo#{$i}): if($i == (($limit / 2) - 1), bar, restyle-var(foo#{$i + 1})),
    foo#{$i}: restyle-var(foo#{$i})
  ));
}

@include restyle-config(log, (
  time: (
    styles-from-grammar: true,
    styles: true,
    total: true,
    all-define: true
  )
));

@include -restyle--log-time(total) {

  @include -restyle--log-time(all-define) {
    @for $i from 0 to $limit {
      @include restyle-define(test-this#{$i}, $data-this);
    }

    @include restyle-define(test-var, $data-var);

    @include restyle-define(test-static, $data-static);
  }

  .test-this {
    @include restyle(test-this0);
  }

  .test-var {
    @include restyle(test-var);
  }

  .test-static {
    @include restyle(test-static);
  }
}
